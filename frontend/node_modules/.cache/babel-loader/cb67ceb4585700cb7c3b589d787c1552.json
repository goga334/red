{"ast":null,"code":"var _jsxFileName = \"/home/jkl334/test_django/red/frontend/src/GroupCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport GroupService from './GroupService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupService = new GroupService();\n\nclass GroupCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Group name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          ref: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          ref: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/group_add/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: this.handleSubmit,\n            children: \"Submit button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n  handleSubmit(event) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      this.handleUpdate(params.pk);\n    } else {\n      this.handleCreate();\n    }\n\n    event.preventDefault();\n  }\n\n  handleCreate() {\n    groupService.createGroup({\n      \"name\": this.refs.name.value,\n      \"description\": this.refs.description.value\n    }).then(result => {\n      alert(\"Group created!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  handleUpdate(pk) {\n    groupService.updateGroup({\n      \"pk\": pk,\n      \"name\": this.refs.name.value,\n      \"description\": this.refs.description.value\n    }).then(result => {\n      alert(\"Group updated!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      groupService.getGroup(params.pk).then(c => {\n        this.refs.name.value = c.name;\n        this.refs.description.value = c.description;\n      });\n    }\n  }\n\n}\n\nexport default GroupCreateUpdate;","map":{"version":3,"sources":["/home/jkl334/test_django/red/frontend/src/GroupCreateUpdate.js"],"names":["React","Component","GroupService","groupService","GroupCreateUpdate","constructor","props","handleSubmit","bind","render","event","match","params","pk","handleUpdate","handleCreate","preventDefault","createGroup","refs","name","value","description","then","result","alert","catch","updateGroup","componentDidMount","getGroup","c"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport  GroupService  from  './GroupService';\n\nconst  groupService  =  new  GroupService();\n\nclass  GroupCreateUpdate  extends  Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Group name:</label>\n              <input className=\"form-control\" type=\"text\" ref='name' />\n\n            <label>\n              Description:</label>\n              <input className=\"form-control\" type=\"text\" ref='description'/>\n\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n\n            <form action=\"/group_add/\">\n            <button  className=\"btn btn-primary\" onClick=  {this.handleSubmit}>Submit button</button>\n            </form>\n\n            </div>\n          </form>\n        );\n    }\n\n    handleSubmit(event) {\n        const { match: { params } } =  this.props;\n        if(params  &&  params.pk){\n            this.handleUpdate(params.pk);\n        }\n        else\n        {\n            this.handleCreate();\n        }\n        event.preventDefault();\n    }\n\n    handleCreate(){\n        groupService.createGroup(\n            {\n            \"name\":  this.refs.name.value,\n            \"description\":  this.refs.description.value\n            }).then((result)=>{\n                    alert(\"Group created!\");\n            }).catch(()=>{\n                    alert('There was an error! Please re-check your form.');\n            });\n    }\n\n    handleUpdate(pk){\n        groupService.updateGroup(\n            {\n            \"pk\":  pk,\n            \"name\":  this.refs.name.value,\n            \"description\":  this.refs.description.value\n            }\n            ).then((result)=>{\n        \n                alert(\"Group updated!\");\n            }).catch(()=>{\n                alert('There was an error! Please re-check your form.');\n            });\n        }\n\n        componentDidMount(){\n            const { match: { params } } =  this.props;\n            if(params  &&  params.pk)\n            {\n                groupService.getGroup(params.pk).then((c)=>{\n                    this.refs.name.value  =  c.name;\n                    this.refs.description.value  =  c.description;\n                })\n            }\n        }\n}\nexport default GroupCreateUpdate;"]},"metadata":{},"sourceType":"module"}