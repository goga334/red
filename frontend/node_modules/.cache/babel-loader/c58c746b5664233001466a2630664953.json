{"ast":null,"code":"var _jsxFileName = \"/home/jkl334/test_django/red/frontend/src/UserCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport UserService from './UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userService = new UserService();\n\nclass UserCreateUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          ref: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Group:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          ref: \"group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n  handleSubmit(event) {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      this.handleUpdate(params.pk);\n    } else {\n      this.handleCreate();\n    }\n\n    event.preventDefault();\n  }\n\n  handleCreate() {\n    userService.createUser({\n      \"username\": this.username.value,\n      \"group\": this.group.value\n    }).then(result => {\n      alert(\"User created!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  handleUpdate(pk) {\n    userService.updateUser({\n      \"pk\": pk,\n      \"username\": this.username.value,\n      \"group\": this.group.value\n    }).then(result => {\n      alert(\"User updated!\");\n    }).catch(() => {\n      alert('There was an error! Please re-check your form.');\n    });\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.pk) {\n      userService.getUser(params.pk).then(c => {\n        this.username.value = c.username;\n        this.group.value = c.group;\n      });\n    }\n  }\n\n}\n\nexport default UserCreateUpdate;","map":{"version":3,"sources":["/home/jkl334/test_django/red/frontend/src/UserCreateUpdate.js"],"names":["React","Component","UserService","userService","UserCreateUpdate","constructor","props","handleSubmit","bind","render","event","match","params","pk","handleUpdate","handleCreate","preventDefault","createUser","username","value","group","then","result","alert","catch","updateUser","componentDidMount","getUser","c"],"mappings":"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","sourcesContent":["import React, { Component } from  'react';\nimport UserService  from  './UserService';\n\nconst  userService  =  new  UserService();\n\nclass  UserCreateUpdate  extends  Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Username:</label>\n              <input className=\"form-control\" type=\"text\" ref='username' />\n\n            <label>\n              Group:</label>\n              <input className=\"form-control\" type=\"text\" ref='group'/>\n\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        );\n    }\n\n    handleSubmit(event) {\n        const { match: { params } } =  this.props;\n        if(params  &&  params.pk){\n            this.handleUpdate(params.pk);\n        }\n        else\n        {\n            this.handleCreate();\n        }\n        event.preventDefault();\n    }\n\n    handleCreate(){\n        userService.createUser(\n            {\n            \"username\":  this.username.value,\n            \"group\":  this.group.value\n            }).then((result)=>{\n                    alert(\"User created!\");\n            }).catch(()=>{\n                    alert('There was an error! Please re-check your form.');\n            });\n    }\n\n    handleUpdate(pk){\n        userService.updateUser(\n            {\n            \"pk\":  pk,\n            \"username\":  this.username.value,\n            \"group\":  this.group.value\n            }\n            ).then((result)=>{\n        \n                alert(\"User updated!\");\n            }).catch(()=>{\n                alert('There was an error! Please re-check your form.');\n            });\n        }\n\n        componentDidMount(){\n            const { match: { params } } =  this.props;\n            if(params  &&  params.pk)\n            {\n                userService.getUser(params.pk).then((c)=>{\n                    this.username.value  =  c.username;\n                    this.group.value  =  c.group;\n                })\n            }\n        }\n}\nexport default UserCreateUpdate;"]},"metadata":{},"sourceType":"module"}